@page "/game"
@rendermode InteractiveServer 
@inject NavigationManager NavigationManager
<link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.2.1/flowbite.min.css" rel="stylesheet" crossorigin="anonymous"/>
<script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.2.1/flowbite.min.js" crossorigin="anonymous"></script>


   <link rel="stylesheet" type="" href="/css/game.css">
<script src="https://kit.fontawesome.com/c407e6d2ac.js" crossorigin="anonymous"></script>
<section >

    <div style="@opacityContainer; @opacityClose " class="containerGame">
        
    
            
        <div class="menuGameStyle">
            
       
 
    
   

    

               <div>
                <section class="containerColorsStyle">
                     <h1>COLOR: @colorX.ToUpper()</h1><h1>COLOR @colorY.ToUpper()</h1> 
                </section>
            <div style="position: relative;">
               <button class="buttonIconStyle" @onclick="Generate" type=""><i class="iconStyle fa-solid fa-rotate" style="color: #ff6bff;"></i></button> 
                
            </div>
<h1 class="resultStyle" style="@changeColor2">RESULLT: @result</h1>
            <label for="color"  class="labelStyle block mb-2 text-sm font-medium text-gray-900 dark:text-white">Choose your answer</label>
            
        <EditForm Model="answerRaw">
            <input type="text" id="color" pattern="[a-zA-Z][a-zA-Z\s]*" style="@changeColor;@changeBorder" @bind-value="answerRaw" class="inputStyle bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="color..." required>
      
        <button type="button" @onclick="answer"  class="buttonStyle text-white bg-gray-800 hover:bg-gray-900 focus:outline-none focus:ring-4 focus:ring-gray-300 font-medium rounded-full text-sm px-5 py-2.5 me-2 mb-2 dark:bg-gray-800 dark:hover:bg-gray-700 dark:focus:ring-gray-700 dark:border-gray-700">ANSWER</button>
      </EditForm>
       
        </div>

        


  


     </div>

      <div>
    
   </div>
   </div>



</section>


    <section style="position: relative;">
        


  
<div style="@containerBubbleChat; @close" class="containerBubbleChat flex items-start gap-2.5">
   <img class="w-8 h-8 rounded-full" src="/img/landingPage/crona.png" alt="Jese image">
   <div class="bubblecChatStyle flex flex-col w-full max-w-[320px] leading-1.5 p-4 border-gray-200 bg-gray-100 rounded-e-xl rounded-es-xl dark:bg-gray-700">
      <div class="flex items-center space-x-2 rtl:space-x-reverse">
         <span class="text-sm font-semibold text-gray-900 dark:text-white">Crona</span>
         <span class="text-sm font-normal text-gray-500 dark:text-gray-400">11:46</span>
      </div>
      <p class="text-sm font-normal py-2.5 text-gray-900 dark:text-white">Hey, uhmm... do you need some help with these color combinations?</p>
      <span class="text-sm font-normal text-gray-500 dark:text-gray-400">Delivered</span>
   </div>
   <button @onclick="openDropdown" id="dropdownMenuIconButton" data-dropdown-toggle="dropdownDots" data-dropdown-placement="bottom-start" class="inline-flex self-center items-center p-2 text-sm font-medium text-center text-gray-900 bg-white rounded-lg hover:bg-gray-100 focus:ring-4 focus:outline-none dark:text-white focus:ring-gray-50 dark:bg-gray-900 dark:hover:bg-gray-800 dark:focus:ring-gray-600" type="button">
      <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 4 15">
         <path d="M3.5 1.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Zm0 6.041a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Zm0 5.959a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Z"/>
      </svg>
   </button>



   <div id="dropdownDots" style="@openMothefucka; @close" class=" z-10 openMotheFucka bg-white divide-y divide-gray-100 rounded-lg shadow w-40 dark:bg-gray-700 dark:divide-gray-600">
      <ul class="py-2 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="dropdownMenuIconButton">
         <li>
            <button @onclick="redirect" class="liStyle block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Yes</button>
         </li>
         <li>
            <button @onclick="closeDropDown"  class="liStyle block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">No</button>
         </li>

      <a href="/list" style="position: absolute; visibility: hidden;"></a>
      </ul>
   </div>
</div>


    </section>
@code {

        private int x = 0;
        private int y = 5;
        private int click = 0;

        private string result = "";
        private string colorX = "";
        private string colorY = "";
        private string answerRaw {get; set;} = "";
        private string checkingAnswer = "";
        private string changeColor = "";

     private string changeColor2 = "";

     private string changeBorder = "";
     private string  openMothefucka = "";
     private string containerBubbleChat = "";
     private string opacityContainer = "";
     private string close = "";
     private string opacityClose  = "";
   
        
Random valueX = new Random();
Random valueY = new Random();
private void Generate() {
x = valueX.Next(1,6);
y = valueY.Next(1,6);
changeColor2 = "color:white";
changeColor = "color:gray";
checkingAnswer = "";
result = "";
      changeBorder = "color: 1px solid black !important";


    if(x == 1 ) {

        colorX = "red";
          }
        if(y == 5) {
 colorY = "red";

        }
    if(x == 2) {

        colorX = "purple";
       
} 
        if( y== 4) {

            colorY = "purple";
        }

    if(x == 3 ) {

             colorX = "pink";
          
 } 
                if( y == 3) {

                    colorY = "pink";

                }
   
   if (x == 4 ) {

        colorX = "black";

 } 
            if(y == 4) {
   colorY = "black";

            }

  if(x == 5 ) {

        colorX = "white";
          
 }
           if(y == 1) {
 colorY = "white";

           }
   

    

}



private void  answer() {

   

    @* COMBO FIRST *@

        if(colorX == "red" && colorY == "red"){

            result = "red";


        } 

          if(colorX == "red" && colorY == "purple" ||  colorX == "purple" && colorY == "red"){

            result = "magenta";


        } 

           if(colorX == "red" && colorY == "pink" || colorX == "pink" && colorY == "red"){

            result = "raspberrypink";


        } 

           if(colorX == "red" && colorY == "black" ||  colorX == "black" && colorY == "red"){

            result = "darkred";


        } 

           if(colorX == "red" && colorY == "white" || colorX == "white" && colorY == "red"){

            result = "pink";


        } 

        @* COMBO TWO *@

           if(colorX == "purple" && colorY == "purple"){

            result = "purple";


        } 

             if(colorX == "purple" && colorY == "red" || colorX == "red" && colorY == "purple"){

            result = "magenta";


        } 


             if(colorX == "purple" && colorY == "pink" || colorX == "pink" && colorY == "purple"){

            result = "magenta";


        } 

             if(colorX == "purple" && colorY == "black" || colorX == "black" && colorY == "purple"){

            result = "darkpurple";


        } 

             if(colorX == "purple" && colorY == "white" || colorX == "white" && colorY == "purple"){

            result = "lightpurple";


        } 

        @* COMBO THREE *@


             if(colorX == "pink" && colorY == "pink"){

            result = "pink";


        } 


              if(colorX == "pink" && colorY == "red" ||  colorX == "red" && colorY == "pink"){

            result = "raspberrypink";


        } 

              if(colorX == "pink" && colorY == "purple" || colorX == "purple" && colorY == "pink"){

            result = "magenta";


        } 

              if(colorX == "pink" && colorY == "black" || colorX == "black" && colorY == "pink"){

            result = "darkpink";


        } 


              if(colorX == "pink" && colorY == "white" || colorX == "white" && colorY == "pink"){

            result = "palepink";


        } 


        @* COMBO FOURTH *@


              if(colorX == "black" && colorY == "black"){

            result = "black";


        } 

                   if(colorX == "black" && colorY == "red" || colorX == "red" && colorY == "black"){

            result = "darkred";


        } 

                   if(colorX == "black" && colorY == "purple" || colorX == "purple" && colorY == "black"){

            result = "darkpurple";


        } 


                   if(colorX == "black" && colorY == "pink" || colorX == "pink" && colorY == "black"){

            result = "darkpink";


        } 

                   if(colorX == "black" && colorY == "white" || colorX == "white" && colorY == "black"){

            result = "neutralwhite";


        } 


        @* COMBO FITH *@

                       if(colorX == "white" && colorY == "white"){

            result = "white";


        } 

                      if(colorX == "white" && colorY == "red" || colorX == "red" && colorY == "white"){

            result = "pink";


        } 

                          if(colorX == "white" && colorY == "purple" || colorX == "purple" && colorY == "white"){

            result = "lightpurple";


        } 

                          if(colorX == "white" && colorY == "pink" || colorX == "pink" && colorY == "white"){

            result = "palepink";


        } 

                          if(colorX == "white" && colorY == "black" || colorX == "black" && colorY == "white"){

            result = "neutralgray";


        } 

        checkingAnswer = answerRaw.ToLower().Replace(" ","");

        Console.WriteLine(checkingAnswer);

     if(checkingAnswer == "" && result == "") {
     changeColor = "color: red";
       changeBorder = "border: 1px solid red !important";
        containerBubbleChat = "display: flex";
            opacityContainer = "opacity: 0.3";
        }

    if(checkingAnswer == result && result != "") {

        changeColor = "color: green";
            changeColor2 = "color: green";
            

    } if(checkingAnswer != result) {

        changeColor = "color: red";
    changeColor2 = "color: red";
          changeBorder = "border: 1px solid red !important";
          containerBubbleChat = "display: flex";
          opacityContainer = "opacity: 0.3";
    }
        

}

private void closeDropDown() {

   close = "visibility: hidden";
        opacityClose = "opacity: 1";
}

private void openDropdown() {
    click ++;

    if(click == 1) {

    openMothefucka = "visibility: visible";

    } if(click == 2) {

        click = 0;
    openMothefucka = "visibility: hidden";
    }

}


private void redirect() {

    NavigationManager.NavigateTo("list");

}


}